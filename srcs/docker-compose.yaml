services:
  dns:
    container_name: dns
    hostname: dns
    build:
      context: ./requirements/dns
      dockerfile: Dockerfile
      args:
        - DOMAIN_NAME=${DOMAIN_NAME}
    ports:
      - "53:53/udp"
    cap_add:
      - NET_ADMIN

  # dotnet:
  #   TODO: 適切な名前に変更する
  #   container_name: mariadb
  #   build:
  #     context: ./requirements/dotnet
  #     dockerfile: Dockerfile
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - dotnet_data:/app

  ftp:
    container_name: ftp
    hostname: ftp
    build:
      context: ./requirements/ftp
      dockerfile: Dockerfile
      args:
        - FTP_USER=${FTP_USER}
        - FTP_PASSWORD=${FTP_PASSWORD}
    ports:
      - "21:21"
      - "21000-21010:21000-21010"
    volumes:
      - wp_data:/var/www/html

  mariadb:
    container_name: mariadb
    hostname: mariadb
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
      args:
        - DB_GROUP=${DB_GROUP}
        - DB_USER=${DB_USER}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - WP_USER_NICKNAME=${WP_USER_NICKNAME}
        - WP_USER_LOGIN=${WP_USER_LOGIN}
        - WP_USER_PASS=${WP_USER_PASS}
        - WP_USER_EMAIL=${WP_USER_EMAIL}
        - WP_USER_DISPLAY_NAME=${WP_USER_DISPLAY_NAME}
    networks:
      - db_network
    volumes:
      - mariadb_data:/var/lib/mysql

  adminer:
    container_name: adminer
    hostname: adminer
    build:
      context: ./requirements/adminer
      dockerfile: Dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION}
        - ADMINER_VERSION=${ADMINER_VERSION}
    networks:
      - db_network
      - proxy_network
    volumes:
      - adminer_data:/var/www/adminer
    depends_on:
      - mariadb

  proxy:
    container_name: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
      args:
        - DOMAIN_NAME=${DOMAIN_NAME}
    volumes:
      - wp_data:/var/www/html:ro
      - adminer_data:/var/www/adminer:ro
      - ./requirements/nginx/files/ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - proxy_network
    depends_on:
      - wordpress
      - adminer

  redis:
    container_name: redix
    build:
      context: ./requirements/redis
      dockerfile: Dockerfile
    networks:
      - redis_network

  wordpress:
    container_name: wordpress_php_fpm
    hostname: wordpress-php-fpm
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION}
        - WP_VERSION=${WP_VERSION}
        - REDIS_CACHE_PLUGIN_VERSION=${REDIS_CACHE_PLUGIN_VERSION}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
    networks:
      - db_network
      - proxy_network
      - redis_network
    volumes:
      - wp_data:/var/www/html
    depends_on:
      - mariadb
      - redis
    environment:
      - WP_AUTH_KEY=${WP_AUTH_KEY}
      - WP_SECURE_AUTH_KEY=${WP_SECURE_AUTH_KEY}
      - WP_LOGGED_IN_KEY=${WP_LOGGED_IN_KEY}
      - WP_NONCE_KEY=${WP_NONCE_KEY}
      - WP_AUTH_SALT=${WP_AUTH_SALT}
      - WP_SECURE_AUTH_SALT=${WP_SECURE_AUTH_SALT}
      - WP_LOGGED_IN_SALT=${WP_LOGGED_IN_SALT}
      - WP_NONCE_SALT=${WP_NONCE_SALT}


networks:
  proxy_network:
  db_network:
  redis_network:

volumes:
  mariadb_data:
  adminer_data:
  wp_data:
  dotnet_data:
